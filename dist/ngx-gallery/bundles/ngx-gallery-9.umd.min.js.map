{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-gallery/src/lib/ngx-gallery-helper.service.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-animation.model.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-image-size.model.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-layout.model.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-order.model.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-action.model.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-options.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-ordered-image.model.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-image/ngx-gallery-image.component.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery.component.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-action/ngx-gallery-action.component.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery.module.ts","../../../projects/ngx-gallery/src/lib/ngx-gallery-image.model.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","NgxGalleryHelperService","renderer","this","swipeHandlers","Map","prototype","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Injectable","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageSize","Cover","Contain","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryOrder","Column","Row","Page","action","icon","disabled","titleText","onClick","obj","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","lazyLoading","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","NgxGalleryAction","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","src","index","NgxGalleryPreviewComponent","sanitization","elementRef","helperService","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","onOpen","EventEmitter","onClose","onActiveChange","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnInit","arrows","arrowsAutoHide","ngOnChanges","changes","_this","swipe","showNext","showPrev","ngOnDestroy","keyDownListener","onMouseEnter","onMouseLeave","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","emit","show","forceFullscreen","manageFullscreen","closeFullscreen","stopAutoPlay","imageMouseEnter","autoPlay","autoPlayPauseOnHover","imageMouseLeave","startAutoPlay","timer","setTimeout","autoPlayInterval","clearTimeout","showAtIndex","canShowNext","images","canShowPrev","infinityMove","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","getSafeUrl","substr","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","bypassSecurityTrustStyle","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","preventDefault","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","animation","_show","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","img","complete","naturalWidth","Input","Output","ViewChild","HostListener","Component","selector","template","NgxGalleryImageComponent","timeout","canChangeImage","reset","selectedIndex","getImages","indexes_1","prevIndex","nextIndex","filter","indexOf","setInterval","clearInterval","handleClick","event","clickable","stopPropagation","setChangeTimeout","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","count","getSafeStyle","NgxGalleryComponent","myElement","imagesReady","change","previewOpen","previewClose","previewChange","oldImagesLength","prevBreakpoint","options","opt","NgxGalleryOptions","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","thubmnails","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","smallImages","small","mediumImages","NgxGalleryOrderedImage","medium","bigImages","big","labels","label","breakpoints","window","pop","concat","__spread","a","sort","b","combineOptions","second","keys","val","HostBinding","providers","NgxGalleryActionComponent","changeDetection","ChangeDetectionStrategy","OnPush","NgxGalleryArrowsComponent","onPrevClick","onNextClick","handlePrevClick","handleNextClick","NgxGalleryBulletsComponent","active","onChange","getBullets","Array","handleChange","NgxGalleryModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Renderer2, ElementRef } from '@angular/core';\n\n@Injectable()\nexport class NgxGalleryHelperService {\n  private swipeHandlers: Map<string, Function[]> = new Map<string, Function[]>();\n\n  constructor(private renderer: Renderer2) {}\n\n  manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: Function, prevHandler: Function): void {\n\n      const handlers = this.getSwipeHandlers(id);\n\n      // swipeleft and swiperight are available only if hammerjs is included\n      try {\n          if (status && !handlers) {\n              this.swipeHandlers.set(id, [\n                  this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n                  this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n              ]);\n          } else if (!status && handlers) {\n              handlers.map((handler) => handler());\n              this.removeSwipeHandlers(id);\n          }\n      } catch (e) {}\n  }\n\n  validateUrl(url: string): string {\n      if (url.replace) {\n          return url.replace(new RegExp(' ', 'g'), '%20')\n              .replace(new RegExp('\\'', 'g'), '%27');\n      } else {\n          return url;\n      }\n  }\n\n  getBackgroundUrl(image: string) {\n      return 'url(\\'' + this.validateUrl(image) + '\\')';\n  }\n\n  private getSwipeHandlers(id: string): Function[] | undefined {\n      return this.swipeHandlers.get(id);\n  }\n\n  private removeSwipeHandlers(id: string): void {\n      this.swipeHandlers.delete(id);\n  }\n}\n","export class NgxGalleryAnimation {\n    static Fade = 'fade';\n    static Slide = 'slide';\n    static Rotate = 'rotate';\n    static Zoom = 'zoom';\n}\n","export class NgxGalleryImageSize {\n    static Cover = 'cover';\n    static Contain = 'contain';\n}\n","export class NgxGalleryLayout {\n    static ThumbnailsTop = 'thumbnails-top';\n    static ThumbnailsBottom = 'thumbnails-bottom';\n}\n","export class NgxGalleryOrder {\n    static Column = 1;\n    static Row = 2;\n    static Page = 3;\n}\n","export interface INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n}\n\nexport class NgxGalleryAction implements INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n\n    constructor(action: INgxGalleryAction) {\n        this.icon = action.icon;\n        this.disabled = action.disabled ? action.disabled : false;\n        this.titleText = action.titleText ? action.titleText : '';\n\n        this.onClick = action.onClick;\n    }\n}\n","import { NgxGalleryAnimation } from './ngx-gallery-animation.model';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\n\nexport interface INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n}\n\nexport class NgxGalleryOptions implements INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n\n    constructor(obj: INgxGalleryOptions) {\n\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\n\n        function use<T>(source: T, defaultValue: T): T {\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n        }\n\n        this.breakpoint = use(obj.breakpoint, undefined);\n        this.width = use(obj.width, '500px');\n        this.height = use(obj.height, '400px');\n        this.fullWidth = use(obj.fullWidth, false);\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n        this.startIndex = use(obj.startIndex, 0);\n        this.linkTarget = use(obj.linkTarget, '_blank');\n        this.lazyLoading = use(obj.lazyLoading, true);\n\n        this.image = use(obj.image, true);\n        this.imagePercent = use(obj.imagePercent, 75);\n        this.imageArrows = use(obj.imageArrows, true);\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n        this.imageSwipe = use(obj.imageSwipe, false);\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\n        if (obj && obj.imageActions && obj.imageActions.length) {\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\n        }\n        this.imageActions = use(obj.imageActions, []);\n        this.imageDescription = use(obj.imageDescription, false);\n        this.imageBullets = use(obj.imageBullets, false);\n\n        this.thumbnails = use(obj.thumbnails, true);\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\n        }\n        this.thumbnailActions = use(obj.thumbnailActions, []);\n\n        this.preview = use(obj.preview, true);\n        this.previewDescription = use(obj.previewDescription, true);\n        this.previewArrows = use(obj.previewArrows, true);\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n        this.previewSwipe = use(obj.previewSwipe, false);\n        this.previewFullscreen = use(obj.previewFullscreen, false);\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n        this.previewAnimation = use(obj.previewAnimation, true);\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\n        this.previewZoom = use(obj.previewZoom, false);\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n        this.previewRotate = use(obj.previewRotate, false);\n        this.previewDownload = use(obj.previewDownload, false);\n        this.previewCustom = use(obj.previewCustom, undefined);\n        this.previewBullets = use(obj.previewBullets, false);\n\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n        if (obj && obj.actions && obj.actions.length) {\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\n        }\n        this.actions = use(obj.actions, []);\n    }\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n}\n\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n\n    constructor(obj: INgxGalleryOrderedImage) {\n        this.src = obj.src;\n        this.index = obj.index;\n    }\n}\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, SimpleChanges, HostListener, Renderer2 } from '@angular/core';\nimport { SafeResourceUrl, SafeUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\n\n@Component({\n  selector: 'ngx-gallery-preview',\n  templateUrl: './ngx-gallery-preview.component.html',\n  styleUrls: ['./ngx-gallery-preview.component.scss']\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnChanges {\n\n  src: SafeUrl;\n  srcIndex: number;\n  description: string;\n  showSpinner = false;\n  positionLeft = 0;\n  positionTop = 0;\n  zoomValue = 1;\n  loading = false;\n  rotateValue = 0;\n  index = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() fullscreen: boolean;\n  @Input() forceFullscreen: boolean;\n  @Input() closeOnClick: boolean;\n  @Input() closeOnEsc: boolean;\n  @Input() keyboardNavigation: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() closeIcon: string;\n  @Input() fullscreenIcon: string;\n  @Input() spinnerIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() zoom: boolean;\n  @Input() zoomStep: number;\n  @Input() zoomMax: number;\n  @Input() zoomMin: number;\n  @Input() zoomInIcon: string;\n  @Input() zoomOutIcon: string;\n  @Input() animation: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() rotate: boolean;\n  @Input() rotateLeftIcon: string;\n  @Input() rotateRightIcon: string;\n  @Input() download: boolean;\n  @Input() downloadIcon: string;\n  @Input() bullets: string;\n\n  @Output() onOpen = new EventEmitter();\n  @Output() onClose = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter<number>();\n\n  @ViewChild('previewImage') previewImage: ElementRef;\n\n  private isOpen = false;\n  private timer;\n  private initialX = 0;\n  private initialY = 0;\n  private initialLeft = 0;\n  private initialTop = 0;\n  private isMove = false;\n\n  private keyDownListener: Function;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService, private renderer: Renderer2,\n      private changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'preview', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  ngOnDestroy() {\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n  }\n\n  onKeyDown(e) {\n      if (this.isOpen) {\n          if (this.keyboardNavigation) {\n              if (this.isKeyboardPrev(e)) {\n                  this.showPrev();\n              } else if (this.isKeyboardNext(e)) {\n                  this.showNext();\n              }\n          }\n          if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n              this.close();\n          }\n      }\n  }\n\n  open(index: number): void {\n      this.onOpen.emit();\n\n      this.index = index;\n      this.isOpen = true;\n      this.show(true);\n\n      if (this.forceFullscreen) {\n          this.manageFullscreen();\n      }\n\n      this.keyDownListener = this.renderer.listen(\"window\", \"keydown\", (e) => this.onKeyDown(e));\n  }\n\n  close(): void {\n      this.isOpen = false;\n      this.closeFullscreen();\n      this.onClose.emit();\n\n      this.stopAutoPlay();\n\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  imageMouseEnter(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  imageMouseLeave(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  startAutoPlay(): void {\n      if (this.autoPlay) {\n          this.stopAutoPlay();\n\n          this.timer = setTimeout(() => {\n              if (!this.showNext()) {\n                  this.index = -1;\n                  this.showNext();\n              }\n          }, this.autoPlayInterval);\n      }\n  }\n\n  stopAutoPlay(): void {\n      if (this.timer) {\n          clearTimeout(this.timer);\n      }\n  }\n\n  showAtIndex(index: number): void {\n      this.index = index;\n      this.show();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext()) {\n          this.index++;\n\n          if (this.index === this.images.length) {\n              this.index = 0;\n          }\n\n          this.show();\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev()) {\n          this.index--;\n\n          if (this.index < 0) {\n              this.index = this.images.length - 1;\n          }\n\n          this.show();\n      }\n  }\n\n  canShowNext(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  manageFullscreen(): void {\n      if (this.fullscreen || this.forceFullscreen) {\n          const doc = <any>document;\n\n          if (!doc.fullscreenElement && !doc.mozFullScreenElement\n              && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n              this.openFullscreen();\n          } else {\n              this.closeFullscreen();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeUrl {\n      return image.substr(0, 10) === 'data:image' ?\n          image : this.sanitization.bypassSecurityTrustUrl(image);\n  }\n\n  zoomIn(): void {\n      if (this.canZoomIn()) {\n          this.zoomValue += this.zoomStep;\n\n          if (this.zoomValue > this.zoomMax) {\n              this.zoomValue = this.zoomMax;\n          }\n      }\n  }\n\n  zoomOut(): void {\n      if (this.canZoomOut()) {\n          this.zoomValue -= this.zoomStep;\n\n          if (this.zoomValue < this.zoomMin) {\n              this.zoomValue = this.zoomMin;\n          }\n\n          if (this.zoomValue <= 1) {\n              this.resetPosition()\n          }\n      }\n  }\n\n  rotateLeft(): void {\n      this.rotateValue -= 90;\n  }\n\n  rotateRight(): void {\n      this.rotateValue += 90;\n  }\n\n  getTransform(): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n  }\n\n  canZoomIn(): boolean {\n      return this.zoomValue < this.zoomMax ? true : false;\n  }\n\n  canZoomOut(): boolean {\n      return this.zoomValue > this.zoomMin ? true : false;\n  }\n\n  canDragOnZoom() {\n      return this.zoom && this.zoomValue > 1;\n  }\n\n  mouseDownHandler(e): void {\n      if (this.canDragOnZoom()) {\n          this.initialX = this.getClientX(e);\n          this.initialY = this.getClientY(e);\n          this.initialLeft = this.positionLeft;\n          this.initialTop = this.positionTop;\n          this.isMove = true;\n\n          e.preventDefault();\n      }\n  }\n\n  mouseUpHandler(e): void {\n      this.isMove = false;\n  }\n\n  mouseMoveHandler(e) {\n      if (this.isMove) {\n          this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n          this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n      }\n  }\n\n  private getClientX(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n  }\n\n  private getClientY(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n  }\n\n  private resetPosition() {\n      if (this.zoom) {\n          this.positionLeft = 0;\n          this.positionTop = 0;\n      }\n  }\n\n  private isKeyboardNext(e): boolean {\n      return e.keyCode === 39 ? true : false;\n  }\n\n  private isKeyboardPrev(e): boolean {\n      return e.keyCode === 37 ? true : false;\n  }\n\n  private isKeyboardEsc(e): boolean {\n      return e.keyCode === 27 ? true : false;\n  }\n\n  private openFullscreen(): void {\n      const element = <any>document.documentElement;\n\n      if (element.requestFullscreen) {\n          element.requestFullscreen();\n      } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen();\n      } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullscreen) {\n          element.webkitRequestFullscreen();\n      }\n  }\n\n  private closeFullscreen(): void {\n      if (this.isFullscreen()) {\n          const doc = <any>document;\n\n          if (doc.exitFullscreen) {\n              doc.exitFullscreen();\n          } else if (doc.msExitFullscreen) {\n              doc.msExitFullscreen();\n          } else if (doc.mozCancelFullScreen) {\n              doc.mozCancelFullScreen();\n          } else if (doc.webkitExitFullscreen) {\n              doc.webkitExitFullscreen();\n          }\n      }\n  }\n\n  private isFullscreen() {\n      const doc = <any>document;\n\n      return doc.fullscreenElement || doc.webkitFullscreenElement\n          || doc.mozFullScreenElement || doc.msFullscreenElement;\n  }\n\n\n\n  private show(first = false) {\n      this.loading = true;\n      this.stopAutoPlay();\n\n      this.onActiveChange.emit(this.index);\n\n      if (first || !this.animation) {\n          this._show();\n      } else {\n          setTimeout(() => this._show(), 600);\n      }\n  }\n\n  private _show() {\n      this.zoomValue = 1;\n      this.rotateValue = 0;\n      this.resetPosition();\n\n      this.src = this.getSafeUrl(<string>this.images[this.index]);\n      this.srcIndex = this.index;\n      this.description = this.descriptions[this.index];\n      this.changeDetectorRef.markForCheck();\n\n      setTimeout(() => {\n          if (this.isLoaded(this.previewImage.nativeElement)) {\n              this.loading = false;\n              this.startAutoPlay();\n              this.changeDetectorRef.markForCheck();\n          } else {\n              setTimeout(() => {\n                  if (this.loading) {\n                      this.showSpinner = true;\n                      this.changeDetectorRef.markForCheck();\n                  }\n              })\n\n              this.previewImage.nativeElement.onload = () => {\n                  this.loading = false;\n                  this.showSpinner = false;\n                  this.previewImage.nativeElement.onload = null;\n                  this.startAutoPlay();\n                  this.changeDetectorRef.markForCheck();\n              }\n          }\n      })\n  }\n\n  private isLoaded(img): boolean {\n      if (!img.complete) {\n          return false;\n      }\n\n      if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n          return false;\n      }\n\n      return true;\n  }\n\n}","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { NgxGalleryOrderedImage } from '../ngx-gallery-ordered-image.model';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryAnimation } from '../ngx-gallery-animation.model';\n\n@Component({\n  selector: 'ngx-gallery-image',\n  templateUrl: './ngx-gallery-image.component.html',\n  styleUrls: ['./ngx-gallery-image.component.scss']\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n  @Input() images: NgxGalleryOrderedImage[];\n  @Input() clickable: boolean;\n  @Input() selectedIndex: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() animation: string;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() bullets: boolean;\n  @Input() timeout = 1000;\n\n  @Output() onClick = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter();\n\n  canChangeImage = true;\n\n  private timer;\n\n  constructor(private sanitization: DomSanitizer,\n      private elementRef: ElementRef, private helperService: NgxGalleryHelperService) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay) {\n          this.startAutoPlay();\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n  }\n\n  getImages(): NgxGalleryOrderedImage[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.lazyLoading) {\n          let indexes = [this.selectedIndex];\n          let prevIndex = this.selectedIndex - 1;\n\n          if (prevIndex === -1 && this.infinityMove) {\n              indexes.push(this.images.length - 1)\n          } else if (prevIndex >= 0) {\n              indexes.push(prevIndex);\n          }\n\n          let nextIndex = this.selectedIndex + 1;\n\n          if (nextIndex == this.images.length && this.infinityMove) {\n              indexes.push(0);\n          } else if (nextIndex < this.images.length) {\n              indexes.push(nextIndex);\n          }\n\n          return this.images.filter((img, i) => indexes.indexOf(i) != -1);\n      } else {\n          return this.images;\n      }\n  }\n\n  startAutoPlay(): void {\n      this.stopAutoPlay();\n\n      this.timer = setInterval(() => {\n          if (!this.showNext()) {\n              this.selectedIndex = -1;\n              this.showNext();\n          }\n      }, this.autoPlayInterval);\n  }\n\n  stopAutoPlay() {\n      if (this.timer) {\n          clearInterval(this.timer);\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (this.clickable) {\n          this.onClick.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  show(index: number) {\n      this.selectedIndex = index;\n      this.onActiveChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext() && this.canChangeImage) {\n          this.selectedIndex++;\n\n          if (this.selectedIndex === this.images.length) {\n              this.selectedIndex = 0;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev() && this.canChangeImage) {\n          this.selectedIndex--;\n\n          if (this.selectedIndex < 0) {\n              this.selectedIndex = this.images.length - 1;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n      }\n  }\n\n  setChangeTimeout() {\n      this.canChangeImage = false;\n      let timeout = this.timeout;\n\n      if (this.animation === NgxGalleryAnimation.Slide\n          || this.animation === NgxGalleryAnimation.Fade) {\n              timeout = 500;\n      }\n\n      setTimeout(() => {\n          this.canChangeImage = true;\n      }, timeout);\n  }\n\n  canShowNext(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex < this.images.length - 1\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n}\n","import { Component, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryOrder } from '../ngx-gallery-order.model';\n\n@Component({\n  selector: 'ngx-gallery-thumbnails',\n  templateUrl: './ngx-gallery-thumbnails.component.html',\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss']\n})\nexport class NgxGalleryThumbnailsComponent implements OnChanges {\n\n  thumbnailsLeft: string;\n  thumbnailsMarginLeft: string;\n  mouseenter: boolean;\n  remainingCountValue: number;\n\n  minStopIndex = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() links: string[];\n  @Input() labels: string[];\n  @Input() linkTarget: string;\n  @Input() columns: number;\n  @Input() rows: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() margin: number;\n  @Input() selectedIndex: number;\n  @Input() clickable: boolean;\n  @Input() swipe: boolean;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() moveSize: number;\n  @Input() order: number;\n  @Input() remainingCount: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n\n  @Output() onActiveChange = new EventEmitter();\n\n  private index = 0;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['selectedIndex']) {\n          this.validateIndex();\n      }\n\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'thumbnails', () => this.moveRight(), () => this.moveLeft());\n      }\n\n      if (this.images) {\n          this.remainingCountValue = this.images.length - (this.rows * this.columns);\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      this.mouseenter = true;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      this.mouseenter = false;\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n      this.setDefaultPosition();\n\n      this.index = 0;\n      this.validateIndex();\n  }\n\n  getImages(): string[] | SafeResourceUrl[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.remainingCount) {\n          return this.images.slice(0, this.rows * this.columns);\n      } \n      else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n          let stopIndex = 0;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n          }\n          else if (this.order === NgxGalleryOrder.Page) {\n              stopIndex = this.index + ((this.columns * this.rows) * 2);\n          }\n\n          if (stopIndex <= this.minStopIndex) {\n              stopIndex = this.minStopIndex;\n          } else {\n              this.minStopIndex = stopIndex;\n          }\n\n          return this.images.slice(0, stopIndex);\n      } \n      else {\n          return this.images;\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (!this.hasLink(index)) {\n          this.selectedIndex = index;\n          this.onActiveChange.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  hasLink(index: number): boolean {\n      if (this.links && this.links.length && this.links[index]) return true;\n  }\n\n  moveRight(): void {\n      if (this.canMoveRight()) {\n          this.index += this.moveSize;\n          let maxIndex = this.getMaxIndex() - this.columns;\n\n          if (this.index > maxIndex) {\n              this.index = maxIndex;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  moveLeft(): void {\n      if (this.canMoveLeft()) {\n          this.index -= this.moveSize;\n\n          if (this.index < 0) {\n              this.index = 0;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  canMoveRight(): boolean {\n      return this.index + this.columns < this.getMaxIndex() ? true : false;\n  }\n\n  canMoveLeft(): boolean {\n      return this.index !== 0 ? true : false;\n  }\n\n  getThumbnailLeft(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = Math.floor(index / this.rows);\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = index % this.columns;\n      }\n      else {\n          calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.columns);\n  }\n\n  getThumbnailTop(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = index % this.rows;\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = Math.floor(index / this.columns);\n      }\n      else {\n          calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.rows);\n  }\n\n  getThumbnailWidth(): SafeStyle {\n      return this.getThumbnailDimension(this.columns);\n  }\n\n  getThumbnailHeight(): SafeStyle {\n      return this.getThumbnailDimension(this.rows);\n  }\n\n  setThumbnailsPosition(): void {\n      this.thumbnailsLeft = - ((100 / this.columns) * this.index) + '%'\n\n      this.thumbnailsMarginLeft = - ((this.margin - (((this.columns - 1)\n      * this.margin) / this.columns)) * this.index) + 'px';\n  }\n\n  setDefaultPosition(): void {\n      this.thumbnailsLeft = '0px';\n      this.thumbnailsMarginLeft = '0px';\n  }\n\n  canShowArrows(): boolean {\n      if (this.remainingCount) {\n          return false;\n      } else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\n          && (!this.arrowsAutoHide || this.mouseenter)) {\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  validateIndex(): void {\n      if (this.images) {\n          let newIndex;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              newIndex = Math.floor(this.selectedIndex / this.rows);\n          } else {\n              newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n          }\n\n          if (this.remainingCount) {\n              newIndex = 0;\n          }\n\n          if (newIndex < this.index || newIndex >= this.index + this.columns) {\n              const maxIndex = this.getMaxIndex() - this.columns;\n              this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n              this.setThumbnailsPosition();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\n      return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n          + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n  }\n\n  private getThumbnailDimension(count: number): SafeStyle {\n      if (this.margin !== 0) {\n          return this.getSafeStyle('calc(' + (100 / count) + '% - '\n              + (((count - 1) * this.margin) / count) + 'px)');\n      } else {\n          return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n      }\n  }\n\n  private getMaxIndex(): number {\n      if (this.order == NgxGalleryOrder.Page) {\n          let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n          if (this.images.length % this.getVisibleCount() > this.columns) {\n              maxIndex += this.columns;\n          }\n          else {\n              maxIndex += this.images.length % this.getVisibleCount();\n          }\n\n          return maxIndex;\n      }\n      else {\n          return Math.ceil(this.images.length / this.rows);\n      }\n  }\n\n  private getVisibleCount(): number {\n      return this.columns * this.rows;\n  }\n\n  private getSafeStyle(value: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(value);\n  }\n}\n","import { Component, OnInit, DoCheck, AfterViewInit, EventEmitter, Output, ViewChild, HostBinding, ElementRef, HostListener, Input } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOptions } from './ngx-gallery-options';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryImage } from './ngx-gallery-image.model';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\n\n@Component({\n  selector: 'ngx-gallery',\n  template: `\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n      <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n      <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n      <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n  `,\n  styleUrls: ['./ngx-gallery.component.scss'],\n  providers: [NgxGalleryHelperService]\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n  @Input() options: NgxGalleryOptions[];\n  @Input() images: NgxGalleryImage[];\n\n  @Output() imagesReady = new EventEmitter();\n  @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n  smallImages: string[] | SafeResourceUrl[];\n  mediumImages: NgxGalleryOrderedImage[];\n  bigImages: string[] | SafeResourceUrl[];\n  descriptions: string[];\n  links: string[];\n  labels: string[];\n\n  oldImages: NgxGalleryImage[];\n  oldImagesLength = 0;\n\n  selectedIndex = 0;\n  previewEnabled: boolean;\n\n  currentOptions: NgxGalleryOptions;\n\n  private breakpoint: number | undefined = undefined;\n  private prevBreakpoint: number | undefined = undefined;\n  private fullWidthTimeout: any;\n\n  @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n  @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n  @ViewChild(NgxGalleryThumbnailsComponent) thubmnails: NgxGalleryThumbnailsComponent;\n\n  @HostBinding('style.width') width: string;\n  @HostBinding('style.height') height: string;\n  @HostBinding('style.left') left: string;\n\n  constructor(private myElement: ElementRef) {}\n\n  ngOnInit() {\n      this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n      this.sortOptions();\n      this.setBreakpoint();\n      this.setOptions();\n      this.checkFullWidth();\n      if (this.currentOptions) {\n          this.selectedIndex = <number>this.currentOptions.startIndex;\n      }\n  }\n\n  ngDoCheck(): void {\n      if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n          || (this.images !== this.oldImages)) {\n          this.oldImagesLength = this.images.length;\n          this.oldImages = this.images;\n          this.setOptions();\n          this.setImages();\n\n          if (this.images && this.images.length) {\n              this.imagesReady.emit();\n          }\n\n          if (this.image) {\n              this.image.reset(<number>this.currentOptions.startIndex);\n          }\n\n          if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n              && this.images.length <= 1) {\n              this.currentOptions.thumbnails = false;\n              this.currentOptions.imageArrows = false;\n          }\n\n          this.resetThumbnails();\n      }\n  }\n\n  ngAfterViewInit(): void {\n      this.checkFullWidth();\n  }\n\n  @HostListener('window:resize') onResize() {\n      this.setBreakpoint();\n\n      if (this.prevBreakpoint !== this.breakpoint) {\n          this.setOptions();\n          this.resetThumbnails();\n      }\n\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n\n          if (this.fullWidthTimeout) {\n              clearTimeout(this.fullWidthTimeout);\n          }\n\n          this.fullWidthTimeout = setTimeout(() => {\n              this.checkFullWidth();\n          }, 200);\n      }\n  }\n\n  getImageHeight(): string {\n      return (this.currentOptions && this.currentOptions.thumbnails) ?\n          this.currentOptions.imagePercent + '%' : '100%';\n  }\n\n  getThumbnailsHeight(): string {\n      if (this.currentOptions && this.currentOptions.image) {\n          return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n          + this.currentOptions.thumbnailsMargin + 'px)';\n      } else {\n          return '100%';\n      }\n  }\n\n  getThumbnailsMarginTop(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  getThumbnailsMarginBottom(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  openPreview(index: number): void {\n      if (this.currentOptions.previewCustom) {\n          this.currentOptions.previewCustom(index);\n      } else {\n          this.previewEnabled = true;\n          this.preview.open(index);\n      }\n  }\n\n  onPreviewOpen(): void {\n      this.previewOpen.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.stopAutoPlay();\n      }\n  }\n\n  onPreviewClose(): void {\n      this.previewEnabled = false;\n      this.previewClose.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.startAutoPlay();\n      }\n  }\n\n  selectFromImage(index: number) {\n      this.select(index);\n  }\n\n  selectFromThumbnails(index: number) {\n      this.select(index);\n\n      if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n          && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n          this.openPreview(this.selectedIndex);\n      }\n  }\n\n  show(index: number): void {\n      this.select(index);\n  }\n\n  showNext(): void {\n      this.image.showNext();\n  }\n\n  showPrev(): void {\n      this.image.showPrev();\n  }\n\n  canShowNext(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  previewSelect(index: number) {\n      this.previewChange.emit({index, image: this.images[index]});\n  }\n\n  moveThumbnailsRight() {\n      this.thubmnails.moveRight();\n  }\n\n  moveThumbnailsLeft() {\n      this.thubmnails.moveLeft();\n  }\n\n  canMoveThumbnailsRight() {\n      return this.thubmnails.canMoveRight();\n  }\n\n  canMoveThumbnailsLeft() {\n      return this.thubmnails.canMoveLeft();\n  }\n\n  private resetThumbnails() {\n      if (this.thubmnails) {\n          this.thubmnails.reset(<number>this.currentOptions.startIndex);\n      }\n  }\n\n  private select(index: number) {\n      this.selectedIndex = index;\n\n      this.change.emit({\n          index,\n          image: this.images[index]\n      });\n  }\n\n  private checkFullWidth(): void {\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n          this.width = document.body.clientWidth + 'px';\n          this.left = (-(document.body.clientWidth -\n              this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\n      }\n  }\n\n  private setImages(): void {\n      this.smallImages = this.images.map((img) => <string>img.small);\n      this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n          src: img.medium,\n          index: i\n      }));\n      this.bigImages = this.images.map((img) => <string>img.big);\n      this.descriptions = this.images.map((img) => <string>img.description);\n      this.links = this.images.map((img) => <string>img.url);\n      this.labels = this.images.map((img) => <string>img.label);\n  }\n\n  private setBreakpoint(): void {\n      this.prevBreakpoint = this.breakpoint;\n      let breakpoints;\n\n      if (typeof window !== 'undefined') {\n          breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n              .map((opt) => opt.breakpoint);\n      }\n\n      if (breakpoints && breakpoints.length) {\n          this.breakpoint = breakpoints.pop();\n      } else {\n          this.breakpoint = undefined;\n      }\n  }\n\n  private sortOptions(): void {\n      this.options = [\n          ...this.options.filter((a) => a.breakpoint === undefined),\n          ...this.options\n              .filter((a) => a.breakpoint !== undefined)\n              .sort((a, b) => b.breakpoint - a.breakpoint)\n      ];\n  }\n\n  private setOptions(): void {\n      this.currentOptions = new NgxGalleryOptions({});\n\n      this.options\n          .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n          .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n      this.width = <string>this.currentOptions.width;\n      this.height = <string>this.currentOptions.height;\n  }\n\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n      Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  templateUrl: './ngx-gallery-action.component.html',\n  styleUrls: ['./ngx-gallery-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() onClick: EventEmitter<Event> = new EventEmitter();\n\n  handleClick(event: Event) {\n      if (!this.disabled) {\n          this.onClick.emit(event);\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  templateUrl: './ngx-gallery-arrows.component.html',\n  styleUrls: ['./ngx-gallery-arrows.component.scss']\n})\nexport class NgxGalleryArrowsComponent{\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() onPrevClick = new EventEmitter();\n  @Output() onNextClick = new EventEmitter();\n\n  handlePrevClick(): void {\n      this.onPrevClick.emit();\n  }\n\n  handleNextClick(): void {\n      this.onNextClick.emit();\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  templateUrl: './ngx-gallery-bullets.component.html',\n  styleUrls: ['./ngx-gallery-bullets.component.scss']\n})\nexport class NgxGalleryBulletsComponent {\n  @Input() count: number;\n  @Input() active: number = 0;\n\n  @Output() onChange = new EventEmitter();\n\n  getBullets(): number[] {\n      return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n      this.onChange.emit(index);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxGalleryComponent } from './ngx-gallery.component';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryActionComponent } from './ngx-gallery-action/ngx-gallery-action.component';\nimport { NgxGalleryArrowsComponent } from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport { NgxGalleryBulletsComponent } from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryPreviewComponent, \n    NgxGalleryImageComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxGalleryComponent]\n})\nexport class NgxGalleryModule { }\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n}\n\nexport class NgxGalleryImage implements INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n\n    constructor(obj: INgxGalleryImage) {\n        this.small = obj.small;\n        this.medium = obj.medium;\n        this.big = obj.big;\n        this.description = obj.description;\n        this.url = obj.url;\n        this.label = obj.label;\n    }\n}\n"]}